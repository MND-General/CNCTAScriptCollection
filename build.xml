<?xml version="1.0" encoding="UTF-8"?>

<project name="CNCTAScriptCollection" default="build">
	<property file="build.properties" />

	<taskdef name="jshint" classname="com.philmander.jshint.JsHintAntTask"  classpath="${tools.dir}/ant-jshint-0.3.4-deps.jar" />

	<condition property="nextMinorVersion">
    	<equals arg1="${ext.version.build}" arg2="99"/>
	</condition>

	<target name="increment_build_number" unless="nextMinorVersion">
		<propertyfile file="build.properties">
			<entry key="ext.version.build" type="int" operation="+" default="1" />
		</propertyfile>
	</target>
	
	<target name="increment_release_number" if="nextMinorVersion">
		<propertyfile file="build.properties">
			<entry key="ext.version.release" type="int" operation="+" default="0" />
			<entry key="ext.version.build" type="int" value="0" />
	 	</propertyfile>
	</target>
	
	<target name="prepare" depends="increment_build_number,increment_release_number">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>
	
	<target name="clean-build">
		<delete dir="${build.dir}"/>
	</target>
	
	
	<target name="dist-zip" depends="build">
		<echo message="Updating updates.xml" />
		<replace file="${build.dir}/updates.xml" token="##VERSION##" value="${version}"/>
		<replace file="${build.dir}/updates.xml" token="##ID##" value="${ext.id}"/>
		<replace file="${build.dir}/updates.xml" token="##NAME##" value="${ext.name}"/>
		<move file="${build.dir}/updates.xml" tofile="${dist.dir}/updates.xml" />
		
		<echo message="Updating manifest.json" />
		<replace file="${build.dir}/manifest.json" token="##VERSION##" value="${version}"/>
		<replace file="${build.dir}/manifest.json" token="##UPDATE##" value="${ext.update.webstore}"/>
		
		<echo message="Packaging a non-crx for the chrome web store" />
		<zip destfile="${dist.dir}/${ext.name}-${version}.zip" basedir="${build.dir}"/>
	</target>

	<target name="dist" depends="dist-zip">
		<copy todir="${build.dir}" overwrite="true">
			<fileset dir="${source.dir}">
				<include name="manifest.json"/>
			</fileset>
		</copy>
		
		<echo message="Updating manifest.json" />
		<replace file="${build.dir}/manifest.json" token="##VERSION##" value="${version}"/>
		<replace file="${build.dir}/manifest.json" token="##UPDATE##" value="${ext.update.url}"/>
		<echo message="Generates a chrome extension" />
		
		<exec executable="${chrome.path}">
			<arg value="--pack-extension=${build.dir}" />
			<arg value="--pack-extension-key=${basedir}/.cert/${ext.name}.pem" />
			<arg value="--no-message-box" />
		</exec>
		<move file="${basedir}/build.crx" tofile="${dist.dir}/${ext.name}-${version}.crx" />
	</target>
	
	<target name="build" depends="clean-build,prepare">
		<property name="version" value="${ext.version.major}.${ext.version.minor}.${ext.version.release}.${ext.version.build}"/>
		<echo message="Building ${ext.name} version ${version}" />
		
		<copy todir="${build.dir}">
			<fileset dir="${source.dir}"/>
		</copy>
		<copy todir="${build.dir}">
			<fileset dir="${basedir}">
				<include name="CHANGELOG"/>
				<include name="LICENSE"/>
				<include name="README"/>
			</fileset>
		</copy>
		<!-- TODO: jshint / compile javascripts -->				
	</target>

	<target name="lint">
  		<jshint dir="${basedir}/src/js" includes="**/*.js" />
	</target>
</project>
